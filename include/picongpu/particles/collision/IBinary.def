/* Copyright 2014-2021 Rene Widera, Pawel Ordyna
 *
 * This file is part of PIConGPU.
 *
 * PIConGPU is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PIConGPU is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PIConGPU.
 * If not, see <http://www.gnu.org/licenses/>.
 */

#pragma once

#include <pmacc/functor/Interface.hpp>

namespace picongpu
{
    namespace particles
    {
        namespace collision
        {
            /**  interface for a binary particle functor
             *
             *
             * @tparam T_BinaryFunctor binary particle acc functor, must contain
             *         `void operator()(P1 & particle1, P2 & particle2, ...)`
             *          and support at least two particles
             */
            template<typename T_BinaryFunctor>
            using IBinary = pmacc::functor::Interface<T_BinaryFunctor, 2u, void>;

        } // namespace collision
    } // namespace particles
} // namespace picongpu
